# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TF_USER: kanzat
  TF_TOOL: kanzattool1
  BOT_USER: KanzatBot
  ARTIFACT_FILE: ukwikitasks.jar

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: Kanzat/jwiki
          path: 'jwiki'

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build JWiki with Gradle
        uses: gradle/gradle-build-action@v2.2.1
        with:
          build-root-directory: jwiki
          arguments: publishToMavenLocal

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: target/${{env.ARTIFACT_FILE}}
          if-no-files-found: error

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Set TF_TOOL_DIR env variable
        run: echo "TF_TOOL_DIR=/data/project/${TF_TOOL}" >> $GITHUB_ENV

      - name: Copy artifacts to ToolForge over SSH and redeploy
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: login.toolforge.org
          user: ${{env.TF_USER}}
          key: ${{secrets.DC_PASS}}
          connect_timeout: 10s
          # Create a credentials file with 600 mode
          # Create a startcmd.sh file
          first_ssh: |
            become ${{env.TF_TOOL}} bash -c "install -m 600 <(echo 'user=${{env.BOT_USER}}\npassword=${{secrets.BOT_KEY}}') ${{env.TF_TOOL_DIR}}/credentials.properties"
            become ${{env.TF_TOOL}} bash -c "echo '/usr/bin/java -jar ${{env.TF_TOOL_DIR}}/${{env.ARTIFACT_FILE}} "${{env.TF_TOOL_DIR}}/credentials.properties"' > ${{env.TF_TOOL_DIR}}/startcmd.sh"
          scp: |
            './${{env.ARTIFACT_FILE}}' => ${{env.TF_TOOL_DIR}}/
            './.github/workflows/deploy.sh' => ${{env.TF_TOOL_DIR}}/
          last_ssh: |
            become ${{env.TF_TOOL}} sh ${{env.TF_TOOL_DIR}}/deploy.sh
